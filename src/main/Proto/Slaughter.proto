syntax = "proto3";
option java_multiple_files = true;

package slaughter;


message DTOAnimal{
  int32 id = 1;
  double weight = 2;
  string dod = 3;
  int32 farm = 4;
  bool cont=5;
}

message GetAnimalReq{
  int32 id = 1;
}

message GetAnimalRes{
  DTOAnimal ominous=1;
}

message GetAnimalsReq{

}

message GetAnimalsRes{
  repeated DTOAnimal ominous=1;
}

message PutAnimalReq{
  DTOAnimal ominous=1;
}

message PutAnimalRes{
  string resp=1;
}


message DTOAnimalPart{
  int32 id = 1;
  string name = 2;
  double weight = 3;
  int32 animalId = 4;
  bool cont=5;
}


message GetAnimalPartsReq{

}

message GetAnimalPartsRes{
  repeated DTOAnimalPart ominous=1;
}

message PutAnimalPartReq{
  DTOAnimalPart ominous=1;
}

message PutAnimalPartRes{
  string resp=1;
}


message DTOHalfAnimalPackage{
  int32 id = 1;
}

message GetHalfAnimalPackageReq{
  int32 id = 1;
}

message GetHalfAnimalPackageRes{
  DTOHalfAnimalPackage ominous = 1;
}

message GetHalfAnimalPackagesReq{

}

message GetHalfAnimalPackagesRes{
  repeated DTOHalfAnimalPackage ominous = 1;
}

message PutHalfAnimalPackageReq{
  DTOHalfAnimalPackage ominous = 1;
}

message PutHalfAnimalPackageRes{
  string resp = 1;
}

message RecallReq{
  int32 id=1;
}

message RecallRes{
  string res=1;
}
message DTOOneKindAnimalPackage{
  int32 id = 1;
  string type = 2;
}

message GetOneKindAnimalPackageReq{
  int32 id = 1;
  string type = 2;
}

message GetOneKindAnimalPackageRes{
  DTOOneKindAnimalPackage ominous = 1;
}

message GetOneKindAnimalPackagesReq{

}

message GetOneKindAnimalPackagesRes{
  repeated DTOOneKindAnimalPackage ominous = 1;
}

message PutOneKindAnimalPackageReq{
  DTOOneKindAnimalPackage ominous = 1;
}

message PutOneKindAnimalPackageRes{
  string resp = 1;
}


message GetContaminatedReq{

}

message GetContaminatedRes{
  repeated DTOAnimal ominous=1;
}

service SlaughterService{
  //Animal
  rpc getAnimal(GetAnimalReq) returns (GetAnimalRes);

  rpc getAnimals(GetAnimalsReq) returns (GetAnimalsRes);

  rpc putAnimal(PutAnimalReq) returns (PutAnimalRes);

  //Animal Part
  rpc getAnimalParts(GetAnimalPartsReq) returns (GetAnimalPartsRes);

  rpc putAnimalPart(PutAnimalPartReq) returns (PutAnimalPartRes);

  //Half Animal Package
  rpc getHalfAnimalPackage(GetHalfAnimalPackageReq) returns (GetHalfAnimalPackageRes);

  rpc getHalfAnimalPackages(GetHalfAnimalPackagesReq) returns (GetHalfAnimalPackagesRes);

  rpc putHalfAnimalPackage(PutHalfAnimalPackageReq) returns (PutHalfAnimalPackageRes);

  //One Kind Animal Package
  rpc getOneKindAnimalPackage(GetOneKindAnimalPackageReq) returns (GetOneKindAnimalPackageRes);

  rpc getOneKindAnimalPackages(GetOneKindAnimalPackagesReq) returns (GetOneKindAnimalPackagesRes);

  rpc putOneKindAnimalPackage(PutOneKindAnimalPackageReq) returns (PutOneKindAnimalPackageRes);


  rpc recall(RecallReq) returns (RecallRes);
  rpc getContaminated(GetContaminatedReq) returns (GetContaminatedRes);
}